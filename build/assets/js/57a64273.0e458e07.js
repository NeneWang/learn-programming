"use strict";(self.webpackChunklearn_programming=self.webpackChunklearn_programming||[]).push([[3892],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return c}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=r.createContext({}),s=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=s(t.components);return r.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,u=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),d=s(n),c=a,h=d["".concat(u,".").concat(c)]||d[c]||p[c]||o;return n?r.createElement(h,i(i({ref:e},m),{},{components:n})):r.createElement(h,i({ref:e},m))}));function c(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2411:function(t,e,n){n.r(e),n.d(e,{assets:function(){return m},contentTitle:function(){return u},default:function(){return c},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:4,title:"Chapter 2c - Built-in Functions and Math"},u=void 0,s={unversionedId:"lesson-notes/lesson2c",id:"lesson-notes/lesson2c",title:"Chapter 2c - Built-in Functions and Math",description:"Built In Functions",source:"@site/java/lesson-notes/lesson2c.md",sourceDirName:"lesson-notes",slug:"/lesson-notes/lesson2c",permalink:"/java/lesson-notes/lesson2c",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Chapter 2c - Built-in Functions and Math"},sidebar:"tutorialSidebar",previous:{title:"Chapter 2b - Typecasting",permalink:"/java/lesson-notes/lesson-2b"},next:{title:"Chapter 3a",permalink:"/java/lesson-notes/lesson-3a"}},m={},p=[{value:"Built In Functions",id:"built-in-functions",level:2},{value:"Java Math Methods Table",id:"java-math-methods-table",level:3},{value:"Example Usage",id:"example-usage",level:3}],d={toc:p};function c(t){var e=t.components,l=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(4091).Z,width:"689",height:"314"})),(0,o.kt)("h2",{id:"built-in-functions"},"Built In Functions"),(0,o.kt)("h3",{id:"java-math-methods-table"},"Java Math Methods Table"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. max(x,y)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method is used to find the highest value of x and y.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. min(x,y)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method is used to find the smallest value of x and y.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. round(x)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method is used to round off the decimal numbers to the nearest value. (4.25 will be rounded off to 4 & 4.55 will be rounded off to 5).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. sqrt(x)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method is used to find the square root of a number.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. pow(x,y)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method returns the value of the first argument raised to the power to the second argument.(i.e. xy).")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math.abs(x)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method returns the absolute (positive) value of x.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. ceil(x)"),(0,o.kt)("td",{parentName:"tr",align:null},"This method is used to find the smallest integer value that is greater than or equal to the given number.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Math. floor()"),(0,o.kt)("td",{parentName:"tr",align:null},"This method is used to find the largest integer value which is less than or equal to the given number.")))),(0,o.kt)("h3",{id:"example-usage"},"Example Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public class Main {\n\npublic static void main(String[] args)   \n  {  \n      double num1 = 4;  \n      double num2 = 2;  \n      double num3 = 4.25;\n      // return the Minimum of two numbers\n      System.out.println("Minimum of " + num1 + " and " + num2 + "is: " + Math.min(num1, num2));\n      // returns the Maximum of two numbers\n      System.out.println("Maximum of " + num1 + " and " + num2 + "is: " + Math.max(num1, num2));\n      //returns 16 i.e. 4*4 \n      System.out.println("Power of " + num1 + " and " + num2 + "is: " + Math.pow(num1, num2)); \n      // returns the decimal number rounded to the nearest whole number value.\n      System.out.println("Rounding off " + num3 + " yields: " + Math.round(num3));\n      // returns the square root of num1 \n      System.out.println("Square root of " + num1 + " is " + Math.sqrt(num1));\n      // returns the absolute value of int type\n      System.out.println("Absolute value " + num1 + " is " + Math.abs(num1));\n      // returns the smallest integer value that is greater than or equal to the given numbe \n      System.out.println("Ceiling  of " + num3 + " is " + Math.ceil(num3));\n      // returns the largest integer value which is less than or equal to the given number\n      System.out.println("Floor  of " + num3 + " is " + Math.floor(num3));\n  }\n}\n\n')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"\ud83e\uddea Try the code out!"),(0,o.kt)("iframe",{src:"https://trinket.io/embed/java/ef0b0d44ad",width:"100%",height:"600",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:!0})))}c.isMDXComponent=!0},4091:function(t,e,n){e.Z=n.p+"assets/images/2022-05-04-05-12-31-263634ff3b7aae1f8d3646e754b20c22.png"}}]);