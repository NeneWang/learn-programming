"use strict";(self.webpackChunklearn_programming=self.webpackChunklearn_programming||[]).push([[6837],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=a,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(h,o(o({ref:t},u),{},{components:r})):n.createElement(h,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},9566:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={sidebar_position:2,title:"Cheatsheet"},p=void 0,s={unversionedId:"cheatsheet",id:"cheatsheet",title:"Cheatsheet",description:"Programming Cheatsheet",source:"@site/java/cheatsheet.md",sourceDirName:".",slug:"/cheatsheet",permalink:"/java/cheatsheet",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Cheatsheet"},sidebar:"tutorialSidebar",previous:{title:"Welcome to Java Lesson Notes!",permalink:"/java/intro"},next:{title:"Lesson 1a Variables",permalink:"/java/lesson-notes/lesson-1a"}},u={},d=[{value:"Programming Cheatsheet",id:"programming-cheatsheet",level:2},{value:"Verbal Definitions",id:"verbal-definitions",level:2},{value:"Chapter 2",id:"chapter-2",level:3}],c={toc:d};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"programming-cheatsheet"},"Programming Cheatsheet"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"To add...")),(0,i.kt)("h2",{id:"verbal-definitions"},"Verbal Definitions"),(0,i.kt)("h3",{id:"chapter-2"},"Chapter 2"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Term"),(0,i.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Data Types"),(0,i.kt)("td",{parentName:"tr",align:null},"A particular kind of data item,  as defined by the values it can take, the programming language used, or the operations that can be performed on it.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Primitive Data Type"),(0,i.kt)("td",{parentName:"tr",align:null},"A basic type is a data type provided by a programming language as a basic building block")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Non-primitive data types Data Types"),(0,i.kt)("td",{parentName:"tr",align:null},"Non-primitive types are created by the programmer and is not defined by Java by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Character"),(0,i.kt)("td",{parentName:"tr",align:null},"The data type that is used to store a single letter")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Integer"),(0,i.kt)("td",{parentName:"tr",align:null},"The data type that is used to store whole numbers")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Float"),(0,i.kt)("td",{parentName:"tr",align:null},"The data type that is used to store decimal numbers")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Double"),(0,i.kt)("td",{parentName:"tr",align:null},"The data type that is used to store large numbers")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"The data type that is used to store a string of characters or words")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Typecasting"),(0,i.kt)("td",{parentName:"tr",align:null},"The conversion of a data type into another data type")))),(0,i.kt)("p",null,"User input: A feature in programming languages that allows users to provide the inputs for a program.\nPrompt: A symbol or some text from a program indicating that it is waiting for an input from the user.\nTest: The process of finding how well your code works by providing different inputs to the program.\nReusability: Quality of the code that allows it to be reused.\nLogical Error: A logical error is a bug in a program that causes it to produce wrong or unintended result. However, the program compiles and runs without showing an error on the console.\nExample: divided by ZERO, when an integer is divided by ZERO then it will                  compile successfully but at runtime, it will throw an error."),(0,i.kt)("p",null,"Syntax error: Syntax errors are mistakes that a developer/user can do while writing the code.\nExample: System.out.Print(\u201cGood morning!\u201d) - In this line of code, alphabet p in print() has           been capitalized, resulting in a syntax error."),(0,i.kt)("p",null,"shapeSize():   shapeSize() method is used to fix the size of the turtle.\nshape(): shape() method is used change the shape of the turtle."),(0,i.kt)("p",null,"Builtin function: Pre-defined blocks of code that perform a specific function. Example - input(), print(), min(), max()."))}m.isMDXComponent=!0}}]);